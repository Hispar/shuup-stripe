{% extends "shuup/front/checkout/_base.jinja" %}
        {% from "shuup/front/macros/general.jinja" import render_field with context %}

        {% macro render_form() %}
    <form role="form" method="post" action="{{ url('shuup:checkout', phase=" payment") }}">
        {% csrf_token %}
        {{ caller() }}
        </form>
        {% endmacro %}


        {% macro render_stripe_payment() %}
<div class="panel panel-default">
    <div class="panel-body">
        {% call render_form() %}
            {% set custom_message = stripe_utils.get_checkout_payment_details_message() %}
            {% if custom_message %}
                {{ custom_message|safe }}
            {% else %}
                <p>{% trans %}Click the button below to enter your card details.{% endtrans %}</p>
            {% endif %}
            <script src="https://js.stripe.com/v3/"></script>
        <script type="text/javascript">
            // A reference to Stripe.js initialized with your real test publishable API key.
            var stripe = Stripe('{{ stripe.publishable_key }}')
            // Disable the button until we have Stripe set up on the page
            document.querySelector('button').disabled = true
            fetch('/customer/create-payment-intent', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              }
            }).then(function(result) {
              return result.json()
            }).then(function(data) {
              var elements = stripe.elements()
              var style = {
                base: {
                  color: '#32325d',
                  fontFamily: 'Arial, sans-serif',
                  fontSmoothing: 'antialiased',
                  fontSize: '16px',
                  '::placeholder': {
                    color: '#32325d'
                  }
                },
                invalid: {
                  fontFamily: 'Arial, sans-serif',
                  color: '#fa755a',
                  iconColor: '#fa755a'
                }
              }
              var card = elements.create('card', { style: style })
              // Stripe injects an iframe into the DOM
              card.mount('#card-element')
              card.on('change', function(event) {
                // Disable the Pay button if there are no card details in the Element
                document.querySelector('button').disabled = event.empty
                document.querySelector('#card-error').textContent = event.error ? event.error.message : ''
              })
              var form = document.getElementById('payment-form')
              form.addEventListener('submit', function(event) {
                event.preventDefault()
                // Complete payment when the submit button is clicked
                payWithCard(stripe, card, data.clientSecret)
              })
            })
            // Calls stripe.confirmCardPayment
            // If the card requires authentication Stripe shows a pop-up modal to
            // prompt the user to enter authentication details without leaving your page.
            var payWithCard = function(stripe, card, clientSecret) {
              loading(true)
              stripe.confirmCardPayment(clientSecret, {
                payment_method: {
                  card: card
                }
              }).then(function(result) {
                if (result.error) {
                  // Show error to your customer
                  showError(result.error.message)
                } else {
                  // The payment succeeded!
                  orderComplete(result.paymentIntent.id)
                }
              })
            }
            /* ------- UI helpers ------- */
            // Shows a success message when the payment is complete
            var orderComplete = function(paymentIntentId) {
              loading(false)
              document.querySelector('.result-message a').setAttribute(
                'href',
                'https://dashboard.stripe.com/test/payments/' + paymentIntentId
              )
              document.querySelector('.result-message').classList.remove('hidden')
              document.querySelector('button').disabled = true
            }
            // Show the customer the error from Stripe if their card fails to charge
            var showError = function(errorMsgText) {
              loading(false)
              var errorMsg = document.querySelector('#card-error')
              errorMsg.textContent = errorMsgText
              setTimeout(function() {
                errorMsg.textContent = ''
              }, 4000)
            }
            // Show a spinner on payment submission
            var loading = function(isLoading) {
              if (isLoading) {
                // Disable the button and show a spinner
                document.querySelector('button').disabled = true
                document.querySelector('#spinner').classList.remove('hidden')
                document.querySelector('#button-text').classList.add('hidden')
              } else {
                document.querySelector('button').disabled = false
                document.querySelector('#spinner').classList.add('hidden')
                document.querySelector('#button-text').classList.remove('hidden')
              }
            }
        </script>
        {% endcall %}
    </div>
</div>
        {% endmacro %}

        {% macro render_saved_stripe_payment() %}
<div class="panel panel-default">
    <div class="panel-body">
        {% set custom_message = stripe_utils.get_checkout_saved_card_message() %}
        {% if custom_message %}
            {{ custom_message|safe }}
        {% else %}
            <p>{% trans %}Use saved card details by clicking button below:{% endtrans %}</p>
        {% endif %}
        {% for data in stripe_customer_data.sources.data %}
            {% call render_form() %}
                <div class="text-center">
                    <input type="hidden" name="stripeCustomer" value="{{ stripe_customer_data.id }}"/>
                    {% if customer and customer.email %}
                        <input type="hidden" name="stripeEmail" value="{{ customer.email }}"/>
                    {% endif %}
                    <button type="submit" class="stripe-button-el">
                        <span>
                            {% if data.object == "card" %}
                                <i class="fa fa-credit-card"></i>
                                {{ _("Pay with {brand} **** {last4}").format(
                                    brand=data.brand,
                                    funding=data.funding,
                                    last4=data.last4,
                                    exp_month=data.exp_month,
                                    exp_year=data.exp_year).strip() }}
                            {% else %}
                                {{ _("Pay with {funding} {object}").format(funding=data.funding, object=data.object) }}
                            {% endif %}
                        </span>
                    </button>
                </div>
            {% endcall %}
        {% endfor %}
    </div>
</div>
        {% endmacro %}

        {% block checkout_phase_content %}
    <div class="row">
    {% set has_saved_customer_data = (stripe_customer_data and stripe_customer_data.sources and stripe_customer_data.sources.data) %}
        <div class="col-xs-12 text-center">
            {% set custom_message = stripe_utils.get_checkout_payment_phase_message() %}
            {% if custom_message %}
                {{ custom_message|safe }}
            {% else %}
                <p>{% trans %}We use Stripe for secure payment handling. You will only be charged when your order completes.{% endtrans %}</p>
            {% endif %}
        </div>
        {% if has_saved_customer_data %}
            <div class="col-md-6 text-center">{{ render_stripe_payment() }}</div>
            <div class="col-md-6 text-center">{{ render_saved_stripe_payment() }}</div>
        {% else %}
            <div class="col-md-12 text-center">{{ render_stripe_payment() }}</div>
        {% endif %}
    </div>
        {% endblock %}
